JSP가 등장하게 된 배경
1. 문제점
	- 웹 프로그램의 화면 기능이 복잡해지므로 서블릿의 자바 기반으로 화면 기능 구현 시 어려움이 발생함.
	- 디자이너 입장에서 화면 구현 시 자바 코드로 인해 작업이 어려움. ==> 자바에 대한 지식이 없는 경우.
	- 서블릿에 비지니스 로직과 화면 구현 기능이 같이 있다 보니 개발 후 유지관리가 어려움.
2. 해결책
	- 서블릿의 비지니스 로직과 결과를 보여주는 화면 기능을 분리하자.
	- 비지니스 로직과 화면을 분리함으로써 개발자는 비지니스 로직 구현에 집중하고, 디자이너는 화면 기능 구현에 집중하자.
	- 개발 후 재사용성과 유지관리가 훨씬 수월해진다.
	
JSP 동작방식의 구성 요소
1. <% 자바코드 %> : 스크립트릿 ==> 자바코드를 작성하고 실행할 때 사용.
2. <%=		%> : JSP 표현식 ==> 변수나 메서드의 결과값을 출력할 때 사용.
3. <%!		%> : JSP 선언부 ==> 메서드를 선언할 때 사용.

서블릿: 자바코드안에 HTML
JSP : HTML코드안에 자바코드..? ↑저렇게 나오면 자바와 관련된 코드들
